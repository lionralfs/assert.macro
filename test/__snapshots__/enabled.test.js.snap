// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`assert.macro - enabled Keep and rewrite import if used: Keep and rewrite import if used 1`] = `
"
import assert from '../dist/assert.macro';

function doSomething(val) {
  assert(val > 0, 'Custom error message');
}

      ↓ ↓ ↓ ↓ ↓ ↓

const assert = require('assert.macro/impl');

function doSomething(val) {
  assert(val > 0, 'Custom error message');
}
"
`;

exports[`assert.macro - enabled Remove import if unused: Remove import if unused 1`] = `
"
import assert from '../dist/assert.macro';

      ↓ ↓ ↓ ↓ ↓ ↓


"
`;

exports[`assert.macro - enabled Throws if anything other than the default export is used: Throws if anything other than the default export is used 1`] = `
"
import assert, { nonExistentExport } from '../dist/assert.macro';

      ↓ ↓ ↓ ↓ ↓ ↓

MacroError: You should only import assert as default. You are also importing nonExistentExport.
"
`;

exports[`assert.macro - enabled Throws if not used as a call expression: Throws if not used as a call expression 1`] = `
"
import assert from '../dist/assert.macro';

assert;

      ↓ ↓ ↓ ↓ ↓ ↓

MacroError: you must call the macro
"
`;

exports[`assert.macro - enabled Throws used without condition argument: Throws used without condition argument 1`] = `
"
import assert from '../dist/assert.macro';

assert();

      ↓ ↓ ↓ ↓ ↓ ↓

MacroError: assert() needs at least 1 argument (the assertion condition).
"
`;
